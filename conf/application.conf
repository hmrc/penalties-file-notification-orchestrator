# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = penalties-file-notification-orchestrator

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.audit.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# Internal auth modules
play.modules.enabled += "uk.gov.hmrc.internalauth.client.modules.InternalAuthModule"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

play.modules.enabled += "global.ServiceBindings"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  enabled = true
}

# Microservice specific config

mongodb {
  uri = "mongodb://localhost:27017/penalties-file-notification-orchestrator"
}

microservice {

  services {
    auth {
      host = localhost
      port = 8500
    }

    penalties-stub {
      host = localhost
      port = 9183
    }

    sdes {
      host = localhost
      port = 1111
    }

    internal-auth {
      host = localhost
      port = 8470
    }
  }
}

mongo-config {
    ttlDays = 7
}

schedules {
  SendFileNotificationsToSDESJob {
    description = "Send file notifications to SDES"
    expression = "0_0/1_*_?_*_*_*"  # run every minute
    enabled = true
    mongoLockTimeout = 7200 # 2 hours in seconds used to release the mongo lock in case the job fails with exception and doesn't unlock
  }

  MonitoringJob {
    description = "Monitoring job to see stats on the service"
    expression = "0_0/10_*_?_*_*_*"  # run every 10 minutes
    enabled = false
    mongoLockTimeout = 7200 # 2 hours in seconds used to release the mongo lock in case the job fails with exception and doesn't unlock
  }

  HandleStuckNotificationsJob {
    description = "Job to set retry file notifications where FileReceived/FileProcessed has not been received by SDES"
    expression = "0_0/5_*_?_*_*_*"  # run every 5 minutes
    enabled = true
    mongoLockTimeout = 7200 # 2 hours in seconds used to release the mongo lock in case the job fails with exception and doesn't unlock
  }
}

sdes {
    outboundBearerToken = ""
}


feature-switch {
  useStubForSDESCall = true
  use-internal-auth = false
}

notifications {
  minutesUntilRetryOnCallbackFailure = 30
  numberOfMinutesToWaitUntilNotificationRetried = 60
}
